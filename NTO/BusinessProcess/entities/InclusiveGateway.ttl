@prefix ogit.Datacenter:        <http://www.purl.org/ogit/Datacenter/> .
@prefix ogit.Knowledge:         <http://www.purl.org/ogit/Knowledge/> .
@prefix ogit.Network:           <http://www.purl.org/ogit/Network/> .
@prefix ogit.Forum:   		    <http://www.purl.org/ogit/Forum/> .
@prefix ogit.Forum:             <http://www.purl.org/ogit/Forum/> .
@prefix ogit.Automation:        <http://www.purl.org/ogit/Automation/> .
@prefix ogit.MARS:              <http://www.purl.org/ogit/MARS/> .
@prefix owl:                    <http://www.w3.org/2002/07/owl#> .
@prefix ogit.Software:          <http://www.purl.org/ogit/Software/> .
@prefix ogit.Cost:              <http://www.purl.org/ogit/Cost/> .
@prefix ogit.Price:             <http://www.purl.org/ogit/Price/> .
@prefix ogit.ServiceManagement: <http://www.purl.org/ogit/ServiceManagement/> .
@prefix ogit.OSLC-crtv:         <http://www.purl.org/ogit/OSLC-crtv/> .
@prefix ogit.BusinessProcess:   <http://www.purl.org/ogit/BusinessProcess/> .
@prefix ogit:                   <http://www.purl.org/ogit/> .
@prefix rdfs:                   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms:                <http://purl.org/dc/terms/> .

ogit.BusinessProcess:InclusiveGateway
	a rdfs:Class;
	rdfs:subClassOf ogit:Entity;
	rdfs:label "InclusiveGateway";
	dcterms:description """The Inclusive Gateway can be seen as a combination of an exclusive and a parallel gateway. 
Like an exclusive gateway you can define conditions on outgoing sequence flows and the inclusive gateway will evaluate them. 
However, the main difference is that the inclusive gateway can receive more than one sequence flow, like a parallel gateway.
The functionality of the inclusive gateway is based on the incoming and outgoing sequence flow:


fork: all outgoing sequence flow conditions are evaluated and for the sequence flow conditions that evaluate to 'true' the 
flows are followed in parallel, creating one concurrent execution for each sequence flow.

join: all concurrent executions arriving at the inclusive gateway wait at the gateway until an execution has arrived for
each of the incoming sequence flows that have a process token. This is an important difference to the parallel gateway. 
So in other words, the inclusive gateway will only wait for the incoming sequence flows that will be executed. After the 
join, the process continues past the joining inclusive gateway.

Note that an inclusive gateway can have both fork and join behavior, if there are multiple incoming and outgoing sequence 
flows for the same inclusive gateway. In that case, the gateway will first join all incoming sequence flows that have a 
process token, before splitting into multiple concurrent paths of executions for the outgoing sequence flows that have a 
condition that evaluates to 'true'.""";
	# For ranges, see http://dublincore.org/documents/dcmi-period/
	dcterms:valid "start=2015-05-21;";
	dcterms:creator "Peter Larem";
	ogit:scope "NTO";
	ogit:parent "http://www.purl.org/ogit/Node";
	ogit:mandatory-attributes (
		ogit.BusinessProcess:gatewayFunctionality
	);
	ogit:optional-attributes (
		ogit:name
		ogit:description
	);
	ogit:indexed-attributes (
		
	);
	ogit:allowed (
			[ ogit:contains  ogit.Software:SoftwareComponent ]
			[ ogit:contains  ogit.Software:Application ]
			[ ogit:assignedTo  ogit:Role ]
			[ ogit:uses  ogit.BusinessProcess:DataObject ]
			[ ogit:uses  ogit.BusinessProcess:DataStore ]
	);
.
